pipeline {
    agent any
    environment {
        APP_SERVER_TOKEN = credentials('APP_SERVER_TOKEN')
        CLIENT_ID_GITHUBAPP = credentials('CLIENT_ID_GITHUBAPP')
        CLIENT_ID_OAUTH_APP = credentials('CLIENT_ID_OAUTH_APP')
        CLIENT_SECRET_OAUTH_APP = credentials('CLIENT_SECRET_OAUTH_APP')
        // goes into gradle.properties
        APP_SERVER_BASE_URL = 'base_url'
        APP_NAME_GITHUBAPP = 'star-notifications-app'
        GRADLE_USER_HOME = "$WORKSPACE/.gradle"
    }

    stages {
        //stage('Clear Ws') {
        //    steps {
        //        cleanWs()
        //    }
        //}
        stage('Docker') {
            steps {
                sh '''
                    docker build --tag shyamkp4/androidplayroom .
                '''
            }
        }
        stage('Build') {
            agent {
                docker {
                    image 'shyamkp4/androidplayroom'
                    reuseNode true
                }
            }
            steps {
                withCredentials([file(credentialsId: 'githubapp_private_key', variable: 'secretFile')]) {
                    // do something with the file, for instance
                    sh '''
                    cp -f $secretFile githubplayroom/githubplayroom_private_key.pem
                    '''
                }
                withCredentials([file(credentialsId: 'google_services_json', variable: 'googleServicesJson')]) {
                    // do something with the file, for instance
                    sh '''
                    cp -f $googleServicesJson githubplayroom/google-services.json
                    '''
                }
                sh '''
                cat >secrets.properties <<EOL
CLIENT_ID_OAUTH_APP=$CLIENT_ID_OAUTH_APP
CLIENT_SECRET_OAUTH_APP=$CLIENT_SECRET_OAUTH_APP
CLIENT_ID_GITHUBAPP=$CLIENT_ID_GITHUBAPP
APP_SERVER_TOKEN=$APP_SERVER_TOKEN
EOL
                sed -i.bak "/APP_SERVER_BASE_URL=/ s/=.*/=$APP_SERVER_BASE_URL/" gradle.properties && rm gradle.properties.bak
                sed -i.bak "/APP_NAME_GITHUBAPP=/ s/=.*/=$APP_NAME_GITHUBAPP/" gradle.properties && rm gradle.properties.bak
                cd githubplayroom
                ./pkcs1_to_pkcs8.sh
                cd ..
                gradle -v
                gradle :githubplayroom:assembleDebug
                '''
            }
        }
        stage('Test') {
            steps {
                sh '''
                echo Testing
                '''
                // sh 'test -f .apk'
            }
        }
    }
    post {
        success {
            sh '''
                echo post on Success
                '''
            // archiveArtifacts artifacts: 'build/**'
        }
        // always {
        // }
    }
}